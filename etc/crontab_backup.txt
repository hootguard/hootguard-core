# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
@reboot /usr/bin/python3 /opt/hootguard/display/welcome_message.py
# Update/check the root hints for unbound once every two months
0 0 1 */2 * /usr/bin/python3 /opt/hootguard/main/scripts/unbound_update_root_hints.py
# Update/check the active blocking lists every two weeks at a random time within 24 hours to reduce load
0 0 */14 * * sleep $((RANDOM % 86400)) && /usr/bin/python3 /opt/hootguard/main/scripts/adblock_update_gravity_db.py
# Check weekly if there is a update available
# Temporarily disabled until full testing completed
# 0 0 */7 * * python3 /opt/hootguard/main/scripts/update/update_check_available.py > /dev/null 2>&1

